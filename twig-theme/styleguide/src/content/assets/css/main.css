@charset "UTF-8";
/*
    Cascade Index
    =============


    This is the main includes file. Here we include each of the sections.
    This includes file only concerns it's self with the cascade order of
    the different sections. Each section than controls it's own internal cascade.

    0.  Toolbox
        The tools needed to author the styles. Variables, functions, breakpoints, mixins.

    1.  Base
        These are styles which effect base elements (p, a, table ect). The 'Base' section includes a reset and parts of normalize.css(https://github.com/necolas/normalize.css) are sprinkled throughout.

    2.  Vendor
        3rd party css. They are included here so that the 'Objects' and 'Ui' sections van override styles.

    3.  Objects
        Reusable patterns. May contain generic patterns like the 'Media'(http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/) object but you may also fill this folder with patterns that are a little more specific to your project.

    4.  Components
        Concrete, implementation-specific piece of UI. All of the changes you make to its styles should be detectable in the context you're currently looking at. Modifying these styles should be safe and have no side effects.

    5.  Ui
        The main styles for your project.

    6.  Top
        Overrides, helpers, utilities, states.
        These classes take precedence over everything else. Only use these classes if the style is relevant across all viewports or a particular state, otherwise you end up trying to fight the classes in the cascade.
*/
/*
    Cascade Index
    =============


    1.  Settings
        Global variables that all partials can access. If you add a variable that you want to use across various partials you might want to consider adding it here.

    2.  Functions
        (hopefully) Useful functions.

    3.  Mixins
        (hopefully) Useful mixins.
*/
/*
    Toolbox:Settings:Colors
    =======================
*/
/*
    Toolbox:Settings:Fonts
    ======================
*/
/*
    Toolbox:Settings:Units
    ======================
*/
/*
    Widths
    ------
*/
/*
    Spacing units
    -------------
*/
/*
    Toolbox:Settings:Z index
    ========================

    Keep track of z-index by assigning your elements z-index to
    one of these defined levels.
*/
/*
    Toolbox:Settings:Breakpoints
    ============================

    Global variables that represent different breakpoint sizes.
*/
/* 1 */
/*
    Toolbox:Functions:Units
    =======================
*/
/*
    PX to EM
    --------

    Convert px to em

    $base-font-size is used as a default so when you use the em() function you don't have to provide
    a second parameter if your working with a element with the default font-size
*/
/*
    EM to PX
    --------

    Convert em to px
*/
/* 2 */
/*
    Toolbox:Mixins:Respond
    ======================

    Taken from:- Magento 'RWD' Theme
    http://devdocs.magento.com/guides/m1x/ce19-ee114/RWD_dev-guide.html - 1.14

    Usage example:
    For IE set $mq-support to false.
    Set the fixed value.
    Then use mixins to test whether styles should be applied.

    $mq-support: false;
    $mq-fixed-value: 1024;

    // Renders at fixed value
    @include respond(min-width, 300px) {
        div { color:#000; }
    }

    // Doesn't render without MQ support
    @include respond(min-width, 1200px) {
        div { color:#FFF; }
    }

    // Doesn't render without MQ support
    @include respond(max-width, 300px) {
        div { color:#444; }
    }

    // Renders at fixed value
    @include respond(max-width, 1200px) {
        div { color:#888; }
    }
*/
/*
    Toolbox:Mixins:Rem
    ==================

    A small mixin for easy use of rem with px as fallback
    usage: @include x-rem(font-size, 14px)
    usage: @include x-rem(marign, 0 12px 2 1.2)
    usage: @include x-rem(padding, 1.5 24px)

    thanks to Eric Meyer for https://github.com/ericam/susy
    and Hans Christian Reinl for http://drublic.de/blog/rem-fallback-sass-less/

    set $base-font-size outside of the mixin in your variables file
*/
/*
    Toolbox:Mixins:Visually Hidden
    ==============================
*/
/*
    Toolbox:Mixins:Widths
    =====================

    Taken from:- inuit.css
    https://github.com/inuitcss/tools.widths - 0.1.4

    A mixin to spit out our width classes.
    Pass in the columns we want the widths to have, and an optional suffix for responsive widths. E.g. to create thirds and quarters for a small breakpoint: @include inuit-widths(3 4, -sm);
*/
/*
    If your having trouble with colors in firefox
    setting opacity: 1 may help you.
    http://stackoverflow.com/questions/14014329/moz-placeholder-does-not-work-in-firefox#comment23310063_14014368

    Usage:-
    @include placeholder {
        color: #808c93;
        opacity: 1;
    }
*/
/* 4 */
/* 0 */
/*
    Base:Reset
    ==========
*/
/*
    1. Use border-box globally
*/
*,
*:after,
*:before {
  box-sizing: border-box;
  /* 1 */
}

/*
    1. reset some stuff
*/
p, blockquote, pre,
dl, dd, form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
}

/*
    1. Correct `block` display not defined for any HTML5 element in IE 8/9. - Normalize:v3.0.3
    1. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. - Normalize:v3.0.3
    1. Correct `block` display not defined for `main` in IE 11. - Normalize:v3.0.3
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
  /* 1 */
}

/*
    1. Correct `inline-block` display not defined in IE 8/9. - Normalize:v3.0.3
    2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. - Normalize:v3.0.3
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
    1. Prevent modern browsers from displaying `audio` without controls. - Normalize:v3.0.3
    2. Remove excess height in iOS 5 devices. - Normalize:v3.0.3
*/
audio:not([controls]) {
  display: none;
  /* 1 */
  height: 0;
  /* 2 */
}

/*
    1. Address `[hidden]` styling not present in IE 8/9/10. - Normalize:v3.0.3
    2. Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22. - Normalize:v3.0.3
*/
[hidden],
template {
  /* 2 */
  display: none;
}

/*
    Base:Main
    =========
*/
/*
    1. Prevent iOS and IE text size adjust after device orientation change, without disabling
       without disabling user zoom. - Normalize:v3.0.3
*/
html {
  -webkit-text-size-adjust: 100%;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 1 */
  font-size: 1.125em;
  font-family: Monaco, Consolas, "Lucida Console", monospace;
  line-height: 1.4;
  min-height: 100%;
  color: black;
}

/*
    1. Remove default margin. - Normalize:v3.0.3
*/
body {
  margin: 0;
  /* 1 */
  background: white;
}

/*
    Base:Headings
    =============
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: Monaco, Consolas, "Lucida Console", monospace;
}

h1 {
  font-size: 30px;
}

h2 {
  font-size: 25px;
}

h3 {
  font-size: 22px;
}

h4 {
  font-size: 20px;
}

h5 {
  font-size: 18px;
}

h6 {
  font-size: 16px;
}

/*
    Base:Links
    ==========
*/
/*
    1. Remove the gray background color from active links in IE 10. - Normalize:v3.0.3
*/
a {
  color: #65b03c;
  background-color: transparent;
  /* 1 */
  transition: background-color .2s ease-out;
}

a:hover, a:focus {
  color: #bae0a5;
}

/*
    Base:Lists
    ==========
*/
/*
    1. Remove vertical spacing from nested lists. - inuit.css 0.1.0
*/
li > ul,
li > ol {
  margin-bottom: 0;
  /* 1 */
}

/*
    Base:Images
    ===========
*/
/*
    1. So that `alt` text is visually offset if images donâ€™t load.
    2. Fluid images.
    3. Remove border when inside `a` element in IE 8/9. - Normalize:v3.0.3
*/
img {
  font-style: italic;
  /* 1 */
  max-width: 100%;
  /* 2 */
  border: 0;
  /* 3 */
}

/*
    1. Images in `figure` elements.
*/
figure > img {
  display: block;
  /* 1 */
}

/*
    Base:Type
    =========
*/
p {
  margin-bottom: 1.11111em;
}

/*
    1. Remove underlines from potentially troublesome elements.
*/
u,
ins {
  text-decoration: none;
  /* 1 */
}

/*
    1. Apply faux underline via `border-bottom`.
*/
ins {
  border-bottom: 1px solid;
  /* 1 */
}

/*
    1. Give a help cursor to elements that give extra info on `:hover`.
*/
abbr[title],
dfn[title] {
  cursor: help;
  /* 1 */
}

/*
    1. Address styling not present in IE 8/9, Safari 5, and Chrome. - Normalize:v3.0.2
*/
abbr[title] {
  border-bottom: 1px dotted;
  /* 1 */
}

/*
    1. Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. - Normalize:v3.0.2
*/
b,
strong {
  font-weight: bold;
  /* 1 */
}

/*
    1. Address styling not present in Safari 5 and Chrome. - Normalize:v3.0.2
*/
dfn {
  font-style: italic;
  /* 1 */
}

/*
    Address styling not present in IE 8/9. - Normalize:v3.0.2
*/
mark {
  background: #ff0;
  /* 1 */
  color: #000;
  /* 1 */
}

/*
    1. Set consistent quote types. - Normalize:v2.1.0
*/
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
  /* 1 */
}

/*
    1. Address inconsistent and variable font size in all browsers. - Normalize:v3.0.2
*/
small {
  font-size: 0.77778em;
  /* 1 */
}

/*
    1:sub-sup. Prevent `sub` and `sup` affecting `line-height` in all browsers. - Normalize:v3.0.2
*/
sub,
sup {
  font-size: 75%;
  /* 1:sub-sup */
  line-height: 0;
  /* 1:sub-sup */
  position: relative;
  /* 1:sub-sup */
  vertical-align: baseline;
  /* 1:sub-sup */
}

sup {
  top: -0.5em;
  /* 1:sub-sup */
}

sub {
  bottom: -0.25em;
  /* 1:sub-sup */
}

/*
    Base:Forms
    ==========
*/
/*
    1. Give form elements some cursor interactions...
*/
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
  /* 1 */
}

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  /* 1 */
  border: 1px solid black;
}

.text-input,
.text-input,
textarea {
  cursor: text;
  /* 1 */
  border: 1px solid black;
}

/*
    Known limitation: by default, Chrome and Safari on OS X allow very limited
    styling of `select`, unless a `border` property is set.

    1. Correct color not being inherited.
       Known issue: affects color of disabled elements. - Normalize:v3.0.3
    2. Correct font properties not being inherited. - Normalize:v3.0.3
    3. Address margins set differently in Firefox 4+, Safari, and Chrome. - Normalize:v3.0.3
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
    1. Address `overflow` set to `hidden` in IE 8/9/10/11. - Normalize:v3.0.3
*/
button {
  overflow: visible;
  /* 1 */
}

/*
    1. Address inconsistent `text-transform` inheritance for `button` and `select`.
       All other form control elements do not inherit `text-transform` values.
       Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
       Correct `select` style inheritance in Firefox. - Normalize:v3.0.3
*/
button,
select {
  text-transform: none;
  /* 1 */
}

/*
    1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
       and `video` controls. - Normalize:v3.0.3
    2. Correct inability to style clickable `input` types in iOS. - Normalize:v3.0.3
    3. Improve usability and consistency of cursor style between image-type
       `input` and others. - Normalize:v3.0.3
*/
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
    1. Re-set default cursor for disabled elements. - Normalize:v3.0.3
*/
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
    1. Remove inner padding and border in Firefox 4+. - Normalize:v3.0.3
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  /* 1 */
  padding: 0;
  /* 1 */
}

/*
    1. Address Firefox 4+ setting `line-height` on `input` using `!important` in
       the UA stylesheet. - Normalize:v3.0.3
*/
input {
  line-height: normal;
  /* 1 */
}

/*
    It's recommended that you don't attempt to style these elements.
    Firefox's implementation doesn't respect box-sizing, padding, or width.

    1. Address box sizing set to `content-box` in IE 8/9/10. - Normalize:v3.0.3
    2. Remove excess padding in IE 8/9/10. - Normalize:v3.0.3
*/
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
    1. Fix the cursor style for Chrome's increment/decrement buttons. For certain
       `font-size` values of the `input`, it causes the cursor style of the
       decrement button to change from `default` to `text`. - Normalize:v3.0.3
*/
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
  /* 1 */
}

/*
    1. Address `appearance` set to `searchfield` in Safari and Chrome.
*/
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
}

/*
    1. Remove inner padding and search cancel button in Safari and Chrome on OS X.
       Safari (but not Chrome) clips the cancel button when the search input has
       padding (and `textfield` appearance). - Normalize:v3.0.3
*/
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  /* 1 */
}

/*
    1. Correct `color` not being inherited in IE 8/9/10/11. - Normalize:v3.0.3
    2. Remove padding so people aren't caught out if they zero out fieldsets. - Normalize:v3.0.3
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
    1. Remove default vertical scrollbar in IE 8/9/10/11. - Normalize:v3.0.3
*/
textarea {
  overflow: auto;
  /* 1 */
}

/*
    1. Don't inherit the `font-weight` (applied by a rule above).
       NOTE: the default cannot safely be changed in Chrome and Safari on OS X. - Normalize:v3.0.3
*/
optgroup {
  font-weight: bold;
  /* 1 */
}

/*
    Base:Quotes
    ===========
*/
/*
    Base:Grouping
    =============
*/
/*
    1. Address margin not present in IE 8/9 and Safari 5. - Normalize:v3.0.3
*/
figure {
  margin: 1em 40px;
  /* 1 */
}

/*
    1. Address differences between Firefox and other browsers. - Normalize:v3.0.3
*/
hr {
  /* 1 */
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
}

/*
    1. Contain overflow in all browsers. - Normalize:v3.0.3
*/
pre {
  overflow: auto;
  /* 1 */
}

/*
    1. Address odd `em`-unit font size rendering in all browsers. - Normalize:v3.0.3
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 1 */
}

/*
    Base:Tables
    ===========
*/
/*
    1. Remove most spacing between table cells. - Normalize:v3.0.3
*/
table {
  border-collapse: collapse;
  /* 1 */
  border-spacing: 0;
  /* 1 */
}

/*
    Base:SVG
    ========
*/
/*
    1. Correct overflow not hidden in IE 9/10/11. - Normalize:v3.0.3
*/
svg:not(:root) {
  overflow: hidden;
  /* 1 */
}

/*
    Base:Media
    ==========
*/
/*
    1. http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
*/
@-ms-viewport {
  width: device-width;
  /* 1 */
}

/* 1 */
/* 2 */
/*
    Objects:Button
    ==============

    Much of this object was taken from SUITCSS - 4.0.0

    1. Corrects inability to style clickable `input` types in iOS - SUITCSS:components-button:4.0.0
    2. Normalize `box-sizing` across all elements that this component could be applied to. - SUITCSS:components-button:4.0.0
    3. Normalize `line-height`. For `input`, it can't be changed from `normal` in Firefox 4+. - SUITCSS:components-button:4.0.0
    4. Prevent button text from being selectable. - SUITCSS:components-button:4.0.0
    5. Make sure `input` will wrap text across multiple lines. - SUITCSS:components-button:4.0.0
*/
.o-btn {
  -webkit-appearance: none;
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  cursor: pointer;
  display: inline-block;
  line-height: normal;
  /* 3 */
  margin: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  /* 4 */
  white-space: normal;
  /* 5 */
  position: relative;
  text-decoration: none;
  /*
        Remove excess padding and border in Firefox 4+ - SUITCSS:components-button:4.0.0
    */
}

.o-btn, .o-btn:hover {
  text-decoration: none;
}

.o-btn:disabled, .o-btn.is-disabled {
  cursor: default;
}

.o-btn::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
    Variations
    ----------

    e.g
    .o-btn--primary{}
    .o-btn--secondary{}
    .o-btn--tertiary{}
*/
/*
    Objects:Nav
    ===========

    By @csswizardry and taken from a version of inuit.css https://github.com/inuitcss

    When used on an `ol` or `ul`, this class throws the list into horizontal mode
    e.g.:

    Dependencies
    ------------
    * group (clearfix) - must be applied to the main element.

    HTML
    ----
    <ul class=nav group>
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
        <li><a href=#>Contact</a></li>
    </ul>
*/
/*
    1:  Set line-height so positing does not depend on the global line-height set on the html element.
    Overwrite this value on a particular nav if you need to.
    This way if the global line-height changes it does not effect the navigations position.
*/
.o-nav {
  list-style: none;
  margin-left: 0;
  line-height: 1em;
  /* 1 */
}

.o-nav > li,
.o-nav > li > a {
  display: inline-block;
}

/*
    extends .nav and throws the list into vertical mode.
*/
.o-nav--stacked > li {
  display: list-item;
}

.o-nav--stacked > li > a {
  display: block;
}

/*
    Force a nav to occupy 100% of the available width of its parent. Extends
    .nav, original idea @pimpl
*/
.o-nav--fit {
  display: table;
  width: 100%;
}

.o-nav--fit > li {
  display: table-cell;
}

.o-nav--fit > li > a {
  display: block;
}

/*
    Objects:Layout
    ==============

    Taken from:- inuit.css
    https://github.com/inuitcss/objects.layout - 0.3.2

    The inuitcss layout system uses `box-sizing: border-box;` and
    `display: inline-block;` to create an extremely powerful, flexible
    alternative to the traditional grid system. Combine the layout items with
    the widths found in tops/widths.

    Fluid and nestable grid system, e.g.:

    <div class="grid">
        <div class="layout____item u-1/3">
            <p>One third grid</p>
        </div><!--
     --><div class="layout____item u-1/3">
            <p>Two third grid</p>
        </div><!--
     --><div class="layout____item u-1/3">
            <p>One third grid</p>
        </div>
    </div>
*/
/*
    Begin a layout group.
*/
.o-layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -1.11111em;
}

/*
    1. Cause columns to stack side-by-side.
    2. Space columns apart.
    3. Align columns to the tops of each other.
    4. Full-width unless told to behave otherwise.
    5. Required to combine fluid widths and fixed gutters.
*/
.o-layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 1.11111em;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
}

/*
    Variations
    ----------
*/
.o-layout--flush {
  margin-left: 0;
}

.o-layout--flush > .o-layout__item {
  padding-left: 0;
}

/*
    Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your markup will display in order 4, 3, 2, 1 on your page.
*/
.o-layout--rev {
  direction: rtl;
  text-align: left;
}

.o-layout--rev > .o-layout__item {
  direction: ltr;
  text-align: left;
}

/*
    Variations - extra
    ------------------
    Less useful uncomment what you need
*/
/*
// Layouts with tiny gutters.
.o-layout--tiny {
    margin-left: (- em(5px));

    > .o-layout__item {
        padding-left: em(5px);
    }
}

// Layouts with small gutters.
.o-layout--small {
    margin-left: (- em(10px));

    > .o-layout__item {
        padding-left: em(10px);
    }
}

// Layouts with large gutters.
.o-layout--large {
    margin-left: (- em(60px));

    > .o-layout__item {
        padding-left: em(60px);
    }
}

// Layouts with huge gutters.
.o-layout--huge {
    margin-left: (- em(100px));

    > .o-layout__item {
        padding-left: em(100px);
    }
}

// Align layout items to the vertical centers of each other.
.o-layout--middle, {
    > .o-layout__item, {
        vertical-align: middle;
    }
}

// Align layout items to the vertical bottoms of each other.
.o-layout--bottom {
    > .o-layout__item {
        vertical-align: bottom;
    }
}

// Make the layout items fill up from the right hand side.
.o-layout--right {
    text-align: right;

    > .o-layout__item {
        text-align: left;
    }
}

// Make the layout items fill up from the center outward.
.o-layout--center {
    text-align: center;

    > .o-layout__item {
        text-align: left;
    }
}

// Cause layout items to take up a non-explicit amount of width.
.o-layout--auto {
    > .o-layout__item {
        width: auto;
    }
}
*/
/* ==========================================================================
   #MEDIA
   ========================================================================== */
/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.o-media {
  display: block;
}

.o-media__img {
  float: left;
  margin-right: 20px;
}

.o-media__img > img {
  display: block;
}

.o-media__body {
  overflow: hidden;
  display: block;
}

.o-media__body,
.o-media__body > :last-child {
  margin-bottom: 0;
}

/* Size variants.
   ========================================================================== */
/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */
/* Gutterless media objects.
  ========================================================================== */
.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0;
}

/* Reversed media objects.
   ========================================================================== */
.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 20px;
}

/* 3 */
.c-widgets__item {
  padding: 0.55556em;
  background: red;
  width: 100%;
  height: 100px;
  border: 3px solid #444;
  margin-bottom: 1.11111em;
  text-align: center;
}

.c-widgets__item h3 {
  margin-bottom: 10px;
}

/* 4 */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
}

h3 {
  margin-bottom: 20px;
}

h4 {
  margin-bottom: 15px;
}

h5 {
  margin-bottom: 10px;
}

.page-head {
  background: black;
  padding: 20px 0;
  margin-bottom: 30px;
}

.logo {
  max-width: 26.66667em;
  color: #c2af75;
  text-align: left;
  float: left;
  font-size: 0.88889em;
}

.logo a {
  color: #c2af75;
  text-decoration: none;
}

.logo a:hover, .logo a:focus {
  color: #f1eddf;
}

.site-menu {
  float: right;
  margin: 0;
}

.page-foot {
  padding-top: 1.11111em;
  padding-bottom: 1.11111em;
  text-align: left;
  font-size: 0.88889em;
  margin-top: 3.88889em;
  border-top: 1px solid #eee;
  background: #E7ECEF;
}

.footer-text {
  float: left;
  width: 50%;
}

.tweets {
  font-size: 0.83333em;
  background: #FFE74C;
  padding: 1.11111em;
  border: 2px solid black;
}

.tweets.page-foot {
  float: right;
  width: 30%;
}

.tweets a {
  width: 40px;
}

.tweets h3 {
  font-size: 1.66667em;
  margin-bottom: 10px;
}

.tweets div {
  margin-bottom: 10px;
}

.tweets div:last-child {
  margin-bottom: 0;
}

.main-content.has-sidebar {
  float: right;
  width: 79%;
}

.page-section {
  border-top: 2px solid black;
  padding-top: 20px;
  margin-top: 20px;
}

.sidebar {
  float: left;
  width: 20%;
}

.sidebar ul {
  margin: 0;
  padding: 0;
}

.sidebar li {
  margin: 0 0 10px 20px;
  padding: 0;
}

.comment-form small {
  display: block;
  margin-bottom: 10px;
}

.blog-comment {
  background: #E7ECEF;
  padding: 20px;
  margin-bottom: 20px;
  font-size: 0.77778em;
}

.form-field {
  margin-bottom: 0.55556em;
}

.form-field label {
  width: 100px;
  display: inline-block;
}

.latest-posts {
  border-top: 2px solid black;
  padding-top: 20px;
  margin-top: 20px;
}

/*
    UI:Inbox
    ========

    The inbox is for styles added quickly that need sorting in to a more appropriate area later.
*/
/* 4 */
/*
    Overrides, helpers, utilities, states
*/
/*
    Top:Widths
    ==========

    Taken from:- inuit.css
    https://github.com/inuitcss/trumps.widths - 0.4.2

    A series of width helper classes that you can use to size things like grid
    systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
    word format (e.g. `.u-2-of-3`). Use these in your markup:

    <div class="u-7/12">
*/
.u-1\/1 {
  width: 100% !important;
}

.u-1\/2 {
  width: 50% !important;
}

.u-1\/3 {
  width: 33.33333% !important;
}

.u-2\/3 {
  width: 66.66667% !important;
}

.u-1\/4 {
  width: 25% !important;
}

.u-2\/4 {
  width: 50% !important;
}

.u-3\/4 {
  width: 75% !important;
}

.u-1\/5 {
  width: 20% !important;
}

.u-2\/5 {
  width: 40% !important;
}

.u-3\/5 {
  width: 60% !important;
}

.u-4\/5 {
  width: 80% !important;
}

/*
Create more grid sizes below:-

@include respond('min-width', $bp--grid-small) {
    @include inuit-widths(1 2 3 4 5, -small);
}
*/
/*
    Top:Floats
    ==========
*/
/*
    Contain floats
    --------------

    Make an element expand to contain floated children.
    Uses pseudo-elements (micro clearfix).

    1. The space content is one way to avoid an Opera bug when the
        `contenteditable` attribute is included anywhere else in the document.
        Otherwise it causes space to appear at the top and bottom of the
        element.
    2. The use of `table` rather than `block` is only necessary if using
        `:before` to contain the top-margins of child elements.
 */
.u-cf:before, .u-cf:after,
.u-clearfix:before,
.u-clearfix:after {
  content: "";
  /* 1 */
  display: table;
  /* 2 */
}

.u-cf:after,
.u-clearfix:after {
  clear: both;
}

/*
    Top:Type
    ========
*/
/*
    Text alignment
    --------------
*/
.u-text--left {
  text-align: left  !important;
}

.u-text--center {
  text-align: center !important;
}

.u-text--right {
  text-align: right !important;
}

/*
    Top:WordPress
    =============

    Helper classes outputted by the WordPress editor.

    This file is not included by default.
*/
/*
    alignment
    ---------

    to float content and have a margin between it and content
    typically used within CMS editors.
*/
.align-right {
  float: right;
  margin-left: 0.55556em;
}

.align-left {
  float: right;
  margin-right: 0.55556em;
}

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto;
}

/*
    Used to clear stuff inside the CMS editor
*/
.clear {
  clear: both;
}

/*
    1.  Force images embedded into posts to be responsive
        Make sure images with WordPress-added height and width >attributes are scaled correctly
*/
img[class*="align"],
img[class*="wp-image-"] {
  height: auto;
  /* 1 */
}

/*
    Top:Type
    ========
*/
.u-constrict {
  max-width: 1024px;
  margin: 0 auto;
}

.u-set-1 {
  background-color: #E7ECEF;
}

.u-set-2 {
  background-color: #FFE74C;
}

.u-set-3 {
  background-color: #FF5964;
}

.u-set-4 {
  background-color: #38618C;
}

.u-set-5 {
  background-color: #8B8C89;
}

/* 5 */
